Identify all the security groups with "0.0.0.0/0" ingress
aws ec2 describe-security-groups --filters Name=ip-permission.cidr,Values='0.0.0.0/0' --query "SecurityGroups[*].{Name:GroupName}" --output text --profile clientprofile
Identify all the security groups which are currently not in-use by EC2 instances.
comm -23  <(aws ec2 describe-security-groups --query 'SecurityGroups[*].GroupId'  --output text --profile clientprofile | tr '\t' '\n'| sort) <(aws ec2 describe-instances --query 'Reservations[*].Instances[*].SecurityGroups[*].GroupId' --output text --profile clientprofile | tr '\t' '\n' | sort | uniq) 
Identify all the security groups which are currently not in-use by any Network interface
comm -23  <(aws ec2 describe-security-groups --query 'SecurityGroups[*].GroupId'  --output text --profile clientprofile | tr '\t' '\n'| sort) <(aws ec2 describe-network-interfaces --query 'NetworkInterfaces[*].Groups[*].GroupId' --output text --profile clientprofile | tr '\t' '\n' | sort | uniq) 
Identify all the security groups with "0.0.0.0/0" ingress and port 22 open
aws ec2 describe-security-groups --query 'SecurityGroups[?IpPermissions[?ToPort==`22` && contains(IpRanges[].CidrIp, `0.0.0.0/0`)]].{GroupId: GroupId, GroupName: GroupName}' --output text --region us-east-1 --profile truep-dev

